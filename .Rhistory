# Install from CRAN
install.packages('rmarkdown')
install.packages('tinytex')
tinytex::install_tinytex()  # install TinyTeX
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
## set up for downloading data from bioconductor
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("yeastCC")
library(yeastCC)
## consider only the elutriation experiment
timecourse_keep <- "elu"
is_elu <- pData(yeastCC)[, "Timecourse"] == timecourse_keep
exp <- yeastCC[, is_elu]
covariates <- pData(exp)
## format data for plotting
phase <- covariates$Phase  # growth phase of the yeast cells
phase <- factor(phase, levels = as.character(unique(phase)))
exp <- exprs(exp)  # log2 fold change in gene expression vs asynchronous culture
# rows index genes
# columns index time-points
time <- gsub("elu", "", covariates$Timepoint)  # minutes after elutriation
str(yeastCC)
time  # note the variable TIME is already available
## examine expression of a gene regulating the cell cycle
vis_systematic <- "YLR182W"  # SWI6 regulates G1 to S transition
vis_standard <- "SWI6"
vis <- exp[vis_systematic, ]
plot(x = seq_along(vis),  # TODO modify this line
y = vis, col = phase,
main = paste("expression of", vis_standard),
ylab = expression(paste("log"[2], " fold change")),)
legend("bottomright", legend = levels(phase),
fill = sort(unique(phase)),
cex = 0.7,
title = "growth phase")
## examine expression of a gene regulating the cell cycle
> vis_systematic <- "YLR182W"  # SWI6 regulates G1 to S transition
> vis_standard <- "SWI6"
> vis <- exp[vis_systematic, ]
>
> plot(x = time,  # TODO modify this line
+      y = vis, col = phase,
+      main = paste("expression of", vis_standard),
+      ylab = expression(paste("log"[2], " fold change")),)
> legend("bottomright", legend = levels(phase),
+        fill = sort(unique(phase)),
+        cex = 0.7,
+        title = "growth phase")
## examine expression of a gene regulating the cell cycle
> vis_systematic <- "YLR182W"  # SWI6 regulates G1 to S transition
> vis_standard <- "SWI6"
> vis <- exp[vis_systematic, ]
>
> plot(x = seq_along(time),  # TODO modify this line
+      y = vis, col = phase,
+      main = paste("expression of", vis_standard),
+      ylab = expression(paste("log"[2], " fold change")),)
> legend("bottomright", legend = levels(phase),
+        fill = sort(unique(phase)),
+        cex = 0.7,
+        title = "growth phase")
time  # note the variable TIME is already available
## examine expression of a gene regulating the cell cycle
vis_systematic <- "YLR182W"  # SWI6 regulates G1 to S transition
vis_standard <- "SWI6"
vis <- exp[vis_systematic, ]
plot(x = seq_along(vis),  # TODO modify this line
y = vis, col = phase,
main = paste("expression of", vis_standard),
ylab = expression(paste("log"[2], " fold change")),)
legend("bottomright", legend = levels(phase),
fill = sort(unique(phase)),
cex = 0.7,
title = "growth phase")
time  # note the variable TIME is already available
## examine expression of a gene regulating the cell cycle
vis_systematic <- "YLR182W"  # SWI6 regulates G1 to S transition
vis_standard <- "SWI6"
vis <- exp[vis_systematic, ]
plot(x = seq_along(time),  # TODO modify this line
y = vis, col = phase,
main = paste("expression of", vis_standard),
ylab = expression(paste("log"[2], " fold change")),)
legend("bottomright", legend = levels(phase),
fill = sort(unique(phase)),
cex = 0.7,
title = "growth phase")
time  # note the variable TIME is already available
## examine expression of a gene regulating the cell cycle
vis_systematic <- "YLR182W"  # SWI6 regulates G1 to S transition
vis_standard <- "SWI6"
vis <- exp[vis_systematic, ]
plot(x = time,  # TODO modify this line
y = vis, col = phase,
main = paste("expression of", vis_standard),
ylab = expression(paste("log"[2], " fold change")),)
legend("bottomright", legend = levels(phase),
fill = sort(unique(phase)),
cex = 0.7,
title = "growth phase")
vec2<-rpois(4, 50)
table1<-data.frame(lambda1<-vec1, lambda2<-vec2)
vec1<-rpois(4, 10)
vec2<-rpois(4, 50)
table1<-data.frame(lambda1<-vec1, lambda2<-vec2)
View(table1)
vec1<-rpois(4, 10)
vec2<-rpois(4, 50)
table1<-data.frame(lambda1=vec1, lambda2=vec2)
View(table1)
mean1<-mean(vec1)
mean2<-mean(vec2)
var1<-var(vec1)
var2<-var(vec2)
gegetwd())
getwd())
getwd()
setwd(Desktop/covid-phylo)
setwd("Desktop/covid-phylo")
file <- system.file("extdata/BEAST", "final_ny_aligned.tree", package="ggtree")
read.beast(file)
ggtree(ggphy, mrsd="2020-12-05") + theme_tree2()
library(ggtree)
file <- system.file("extdata/BEAST", "final_ny_aligned.tree", package="ggtree")
ggphy <- read.beast(file)
ggtree(ggphy, mrsd="2020-12-05") + theme_tree2()
library(ips)
ggphy <- read.beast("final_ny_aligned.tree")
ggtree(ggphy, mrsd="2020-12-05") + theme_tree2()
install.packages("treeio")
install.packages("treeio")
